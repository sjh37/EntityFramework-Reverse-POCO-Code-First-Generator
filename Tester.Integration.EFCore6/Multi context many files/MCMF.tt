<#@ include file                     ="..\..\EntityFramework.Reverse.POCO.Generator\EF.Reverse.POCO.v3.ttinclude" #>
<#
    // Multi context many files
    Settings.DatabaseType            = DatabaseType.SqlServer; // SqlCe, Plugin. Coming next: PostgreSQL, MySql, Oracle
    Settings.TemplateType            = TemplateType.EfCore6; // Ef6, EfCore2, EfCore3, FileBased. FileBased specify folder using Settings.TemplateFolder
    Settings.GeneratorType           = GeneratorType.EfCore; // Ef6, EfCore, Custom. Custom edit GeneratorCustom class to provide your own implementation
    Settings.FileManagerType         = FileManagerType.EfCore; // VisualStudio = .NET project; EfCore = .NET Core project; Null = No output (testing only)
    Settings.ConnectionString        = "Data Source=(local);Initial Catalog=EfrpgTest;Integrated Security=True;Encrypt=false;TrustServerCertificate=true";
    Settings.ConnectionStringName    = "McmfMultiDatabase"; // ConnectionString key as specified in your app.config/web.config/appsettings.json
    Settings.OnConfiguration         = OnConfiguration.Configuration; // EFCore only. Determines the code generated within DbContext.OnConfiguration(). Please read https://github.com/sjh37/EntityFramework-Reverse-POCO-Code-First-Generator/wiki/OnConfiguration    Settings.GenerateSeparateFiles   = false;
    Settings.GenerateSeparateFiles   = true;
    Settings.Namespace               = DefaultNamespace; // Override the default namespace here
    Settings.AddUnitTestingDbContext = false;

    Settings.GenerateSingleDbContext = false;
    Settings.MultiContextSettingsConnectionString = "Data Source=(local);Initial Catalog=EfrpgTest_Settings;Integrated Security=True;Encrypt=false;TrustServerCertificate=true";
    
    Settings.AdditionalNamespaces.Add("Generator.Tests.Common");

    FilterSettings.Reset();
    FilterSettings.AddDefaults();
    FilterSettings.IncludeTableValuedFunctions = true;
    FilterSettings.IncludeScalarValuedFunctions = true;
    FilterSettings.CheckSettings();

    // Generate files in sub-folders ******************************************************************************************************
    // Only activated if Settings.GenerateSeparateFiles = true && Settings.FileManagerType = FileManagerType.EfCore
    Settings.ContextFolder           = @"Contexts";      // Sub-folder you would like your DbContext to be added to.              e.g. @"Data"
    Settings.InterfaceFolder         = @"Interfaces";    // Sub-folder you would like your Interface to be added to.              e.g. @"Data\Interface"
    Settings.PocoFolder              = @"Entities";      // Sub-folder you would like your Poco's to be added to.                 e.g. @"Data\Entities"
    Settings.PocoConfigurationFolder = @"Configuration"; // Sub-folder you would like your Configuration mappings to be added to. e.g. @"Data\Configuration"


    Inflector.IgnoreWordsThatEndWith = new List<string> { "Status", "To", "Data" };
    Inflector.PluralisationService = new EnglishPluralizationService();
    var outer = (GeneratedTextTransformation) this;
    var fileManagement = new FileManagementService(outer);
    var generator = GeneratorFactory.Create(fileManagement, FileManagerFactory.GetFileManagerType());
    if (generator != null && generator.InitialisationOk)
    {
        generator.ReadDatabase();
        generator.GenerateCode();
    }
    fileManagement.Process(true);#>